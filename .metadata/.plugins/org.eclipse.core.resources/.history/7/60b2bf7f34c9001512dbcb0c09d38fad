package glazer.englard.tetris;

import java.awt.Color;
import java.util.Random;

public class Piece {

	// the shape and color of the piece are randomly generated
	// each piece is made of 4 subunits

	private char shape;
	private Color color;
	private int row1;
	private int column1;
	private int row2;
	private int column2;
	private int row3;
	private int column3;
	private int row4;
	private int column4;

	public Piece() {
		this.color = generateColor();
		this.shape = generateShape();
		setStartPosition(); // based on the shape, the boxes in grid that are
							// highlighed

	}

	public int getRow1() {
		return row1;
	}

	public void setRow1(int row1) {
		this.row1 = row1;
	}

	public int getColumn1() {
		return column1;
	}

	public void setColumn1(int column1) {
		this.column1 = column1;
	}

	public int getRow2() {
		return row2;
	}

	public void setRow2(int row2) {
		this.row2 = row2;
	}

	public int getColumn2() {
		return column2;
	}

	public void setColumn2(int column2) {
		this.column2 = column2;
	}

	public int getRow3() {
		return row3;
	}

	public void setRow3(int row3) {
		this.row3 = row3;
	}

	public int getColumn3() {
		return column3;
	}

	public void setColumn3(int column3) {
		this.column3 = column3;
	}

	public int getRow4() {
		return row4;
	}

	public void setRow4(int row4) {
		this.row4 = row4;
	}

	public int getColumn4() {
		return column4;
	}

	public void setColumn4(int column4) {
		this.column4 = column4;
	}

	public char getShape() {
		return shape;
	}

	public Color getColor() {
		return color;
	}

	private Color generateColor() {
		Random newColor = new Random();
		int num = newColor.nextInt(8);
		switch (num) {
		case 0:
			this.color = Color.BLUE;
			break;
		case 1:
			this.color = Color.CYAN;
			break;
		case 2:
			this.color = Color.GREEN;
			break;
		case 3:
			this.color = Color.MAGENTA;
			break;
		case 4:
			this.color = Color.ORANGE;
			break;
		case 5:
			this.color = Color.PINK;
		case 6:
			this.color = Color.RED;
			break;
		case 7:
			this.color = Color.YELLOW;
			break;
		}
		return this.color;
	}

	private char generateShape() {
		Random newShape = new Random();
		int numShape = newShape.nextInt(5);
		switch (numShape) {
		case 0:
			shape = 'L';
			break;
		case 1:
			shape = 'Z';
			break;
		case 2:
			shape = 'S';
			break;
		case 3:
			shape = 'l';
			break;
		case 4:
			shape = 'T';
			break;
		case 5:
			shape = 'O';
			break;
		case 6:
			shape = 'J';
			break;
		}
	}

	private void setStartPosition() {
		switch (shape) {
		case 'L':
			
			break;
		case 'Z':
			break;
		case 'S':
			break;
		case 'l':
			break;
		case 'T':
			break;
		case 'O':
			break;
		case 'J':
			break;
		}

	}
}
